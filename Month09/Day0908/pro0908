프로그래머스 - 카펫
완전탐색을 이용하는 문제이지만 몰라서 수학으로 해결

import math
def solution(brown, yellow):
    # 12의 약수 1*12, 2*6 3*4 | 4*3 6*2 12*1
    # 25의 약수 1*25 |5*5| 25*1
    # n의 약수개수 구할때 루트n까지 for문 돌리고 *2 해주면 n의 약수의 개수 구할 수 있음
    # 이부분 응용 yel
    yel = int(math.sqrt(yellow)//1)
    for i in range(1, yel+1):
        if yellow % i == 0: 
            # 24 24(6*4) [8,6] => 즉, 가로 세로 각각 +2의 규칙이 있음
            if (i+2)*(yellow//i+2) ==brown+yellow:
                return [yellow//i+2, i+2]
